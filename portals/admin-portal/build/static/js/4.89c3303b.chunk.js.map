{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-chatbot.entry.js","../../../src/Providers/InteractionsProvider.ts","../../../endpoints.ts","../../../runtimeConfig.shared.ts","../../../runtimeConfig.browser.ts","../../../LexRuntimeServiceClient.ts","../../../../protocols/Aws_restJson1.ts","../../../../commands/PostTextCommand.ts","../../../../commands/PostContentCommand.ts","../../../../src/Providers/AWSLexProviderHelper/convert.ts","../../../src/Providers/AWSLexProvider.ts","../../src/Interactions.ts"],"names":["ChatState","MessageFrom","ChatErrorType","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","__spreadArrays","s","i","il","arguments","r","Array","k","a","j","jl","writeString","view","offset","string","setUint8","charCodeAt","encodeWAV","samples","exportSampleRate","audioSize","dataSize","buffer","ArrayBuffer","DataView","setUint32","fmtSize","setUint16","output","input","byteOffset","Math","max","min","setInt16","floatTo16BitPCM","exportBuffer","recBuffer","recLength","recordSampleRate","downsampledBuffer","sampleRateRatio","newLength","round","Float32Array","offsetResult","offsetBuffer","nextOffsetBuffer","accum","count","downsampleBuffer","bufferArray","set","mergeBuffers","encodedWav","Blob","type","logger","Logger","AudioRecorder","options","streamBuffer","streamBufferLength","recording","prototype","init","_this","_a","browserOrNode","isBrowser","window","AudioContext","webkitAudioContext","audioContext","navigator","mediaDevices","getUserMedia","audio","stream","audioSupported","setupAudioNodes","catch","err_1","sourceNode","processorNode","analyserNode","resume","error","createMediaStreamSource","createScriptProcessor","onaudioprocess","audioProcessingEvent","inputBuffer","getChannelData","analyse","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","connect","context","destination","startRecording","onSilence","visualizer","err_2","start","Date","now","stopRecording","clear","play","myBlob","res","rej","fileReader","FileReader","onload","playbackSource","disconnect","createBufferSource","decodeAudioData","buf","onended","err","onerror","readAsArrayBuffer","stop","analyser","fftSize","bufferLength","dataArray","Uint8Array","amplitude","time","getByteTimeDomainData","curr_value_time","exportWAV","blob","sampleRate","AmplifyChatbot","class_1","hostRef","registerInstance","clearOnComplete","conversationModeOn","botTitle","Translations","CHATBOT_TITLE","voiceEnabled","textEnabled","silenceTime","silenceThreshold","messages","text","chatState","Initial","messageJSX","messageList","map","message","h","class","from","content","SendingText","SendingVoice","client","Bot","User","chatCompleted","createEvent","submitHandler","_event","sendTextMessage","componentWillLoad","Interactions","onComplete","Error","NO_INTERACTIONS_MODULE_FOUND","validateProps","componentDidRender","element","shadowRoot","querySelector","scrollTop","scrollHeight","botName","welcomeMessage","appendToChat","audioRecorder","setError","Recoverable","data","emit","reset","Unrecoverable","NO_BOT_NAME_ERROR","CHAT_DISABLED_ERROR","handleMicButton","Listening","handleSilence","sendVoiceMessage","handleTextChange","event","target","handleCancelButton","handleToastClose","errorType","undefined","canvas","getBoundingClientRect","width","height","canvasCtx","getContext","fillStyle","clearRect","requestAnimationFrame","fillRect","lineWidth","color","getComputedStyle","document","documentElement","getPropertyValue","strokeStyle","beginPath","sliceWidth","x","moveTo","lineTo","stroke","visualize","response","err_3","send","audioInput","interactionsMessage","err_4","dialogState","messageType","inputTranscript","audioStream","listeningFooterJSX","handleButtonClick","variant","icon","footerJSX","inputPlaceholder","TEXT_INPUT_PLACEHOLDER","VOICE_INPUT_PLACEHOLDER","placeholder","I18n","get","description","handleInputChange","evt","disabled","errorToast","handleClose","render","Host","name","Object","defineProperty","getElement","enumerable","configurable","style","contents","$fault","$metadata"],"mappings":"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","file":"static/js/4.89c3303b.chunk.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { r as registerInstance, h, c as createEvent, H as Host, g as getElement } from './index-39969785.js';\nimport { Logger, browserOrNode, I18n } from '@aws-amplify/core';\nimport '@aws-amplify/auth';\nimport { T as Translations } from './Translations-392acb9b.js';\nimport { d as NO_INTERACTIONS_MODULE_FOUND } from './constants-d1abe7de.js';\nimport { Interactions } from '@aws-amplify/interactions';\n// AudioRecorder settings\nvar RECORDER_EXPORT_MIME_TYPE = 'application/octet-stream';\nvar DEFAULT_EXPORT_SAMPLE_RATE = 16000;\nvar FFT_SIZE = 2048; // window size in samples for Fast Fourier Transform (FFT)\nvar FFT_MAX_DECIBELS = -10; // maximum power value in the scaling range for the FFT analysis data\nvar FFT_MIN_DECIBELS = -90; // minimum power value in the scaling range for the FFT analysis data\nvar FFT_SMOOTHING_TIME_CONSTANT = 0.85; // averaging constant with the last analysis frame\n/**\n * Merges multiple buffers into one.\n */\nvar mergeBuffers = function (bufferArray, recLength) {\n    var result = new Float32Array(recLength);\n    var offset = 0;\n    for (var i = 0; i < bufferArray.length; i++) {\n        result.set(bufferArray[i], offset);\n        offset += bufferArray[i].length;\n    }\n    return result;\n};\n/**\n * Downsamples audio to desired export sample rate.\n */\nvar downsampleBuffer = function (buffer, recordSampleRate, exportSampleRate) {\n    if (exportSampleRate === recordSampleRate) {\n        return buffer;\n    }\n    var sampleRateRatio = recordSampleRate / exportSampleRate;\n    var newLength = Math.round(buffer.length / sampleRateRatio);\n    var result = new Float32Array(newLength);\n    var offsetResult = 0;\n    var offsetBuffer = 0;\n    while (offsetResult < result.length) {\n        var nextOffsetBuffer = Math.round((offsetResult + 1) * sampleRateRatio);\n        var accum = 0, count = 0;\n        for (var i = offsetBuffer; i < nextOffsetBuffer && i < buffer.length; i++) {\n            accum += buffer[i];\n            count++;\n        }\n        result[offsetResult] = accum / count;\n        offsetResult++;\n        offsetBuffer = nextOffsetBuffer;\n    }\n    return result;\n};\n/**\n * converts raw audio values to 16 bit pcm.\n */\nvar floatTo16BitPCM = function (output, offset, input) {\n    var byteOffset = offset;\n    for (var i = 0; i < input.length; i++, byteOffset += 2) {\n        var s = Math.max(-1, Math.min(1, input[i]));\n        output.setInt16(byteOffset, s < 0 ? s * 0x8000 : s * 0x7fff, true);\n    }\n};\n/**\n * Write given strings in big-endian order.\n */\nvar writeString = function (view, offset, string) {\n    for (var i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n    }\n};\n/**\n * Encodes raw pcm audio into a wav file.\n */\nvar encodeWAV = function (samples, exportSampleRate) {\n    /**\n     * WAV file consists of three parts: RIFF header, WAVE subchunk, and data subchunk. We precompute the size of them.\n     */\n    var audioSize = samples.length * 2; // We use 16-bit samples, so we have (2 * sampleLength) bytes.\n    var fmtSize = 24; // Byte size of the fmt subchunk: 24 bytes that the audio information that we'll set below.\n    var dataSize = 8 + audioSize; // Byte size of the data subchunk: raw sound data plus 8 bytes for the subchunk descriptions.\n    var totalByteSize = 12 + fmtSize + dataSize; // Byte size of the whole file, including the chunk header / descriptor.\n    // create DataView object to write byte values into\n    var buffer = new ArrayBuffer(totalByteSize); // buffer to write the chunk values in.\n    var view = new DataView(buffer);\n    /**\n     * Start writing the .wav file. We write top to bottom, so byte offset (first numeric argument) increases strictly.\n     */\n    // RIFF header\n    writeString(view, 0, 'RIFF'); // At offset 0, write the letters \"RIFF\"\n    view.setUint32(4, fmtSize + dataSize, true); // At offset 4, write the size of fmt and data chunk size combined.\n    writeString(view, 8, 'WAVE'); // At offset 8, write the format type \"WAVE\"\n    // fmt subchunk\n    writeString(view, 12, 'fmt '); //chunkdId 'fmt '\n    view.setUint32(16, fmtSize - 8, true); // fmt subchunk size below this value. We set 8 bytes already, so subtract 8 bytes from fmtSize.\n    view.setUint16(20, 1, true); // Audiio format code, which is 1 for PCM.\n    view.setUint16(22, 1, true); // Number of audio channels. We use mono, ie 1.\n    view.setUint32(24, exportSampleRate, true); // Sample rate of the audio file.\n    view.setUint32(28, exportSampleRate * 2, true); // Data rate, or # of data bytes per second. Since each sample is 2 bytes, this is 2 * sampleRate.\n    view.setUint16(32, 2, true); // block align, # of bytes per sample including all channels, ie. 2 bytes.\n    view.setUint16(34, 16, true); // bits per sample, ie. 16 bits\n    // data subchunk\n    writeString(view, 36, 'data'); // write the chunkId 'data'\n    view.setUint32(40, audioSize, true); // Audio byte size\n    floatTo16BitPCM(view, 44, samples); // raw pcm values then go here.\n    return view;\n};\n/**\n * Given arrays of raw pcm audio, downsamples the audio to desired sample rate and encodes it to a wav audio file.\n *\n * @param recBuffer {Float32Array[]} - 2d float array containing the recorded raw audio\n * @param recLength {number} - total length of recorded audio\n * @param recordSampleRate {number} - sample rate of the recorded audio\n * @param exportSampleRate {number} - desired sample rate of the exported file\n */\nvar exportBuffer = function (recBuffer, recLength, recordSampleRate, exportSampleRate) {\n    var mergedBuffers = mergeBuffers(recBuffer, recLength);\n    var downsampledBuffer = downsampleBuffer(mergedBuffers, recordSampleRate, exportSampleRate);\n    var encodedWav = encodeWAV(downsampledBuffer, exportSampleRate);\n    var audioBlob = new Blob([encodedWav], {\n        type: RECORDER_EXPORT_MIME_TYPE,\n    });\n    return audioBlob;\n};\nvar logger = new Logger('AudioRecorder');\nvar AudioRecorder = /** @class */ (function () {\n    function AudioRecorder(options) {\n        // input mic stream is stored in a buffer\n        this.streamBuffer = [];\n        this.streamBufferLength = 0;\n        this.recording = false;\n        this.options = options;\n    }\n    /**\n     * This must be called first to enable audio context and request microphone access.\n     * Once access granted, it connects all the necessary audio nodes to the context so that it can begin recording or playing.\n     */\n    AudioRecorder.prototype.init = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!browserOrNode().isBrowser) return [3 /*break*/, 2];\n                        window.AudioContext = window.AudioContext || window.webkitAudioContext;\n                        this.audioContext = new AudioContext();\n                        return [4 /*yield*/, navigator.mediaDevices\n                                .getUserMedia({ audio: true })\n                                .then(function (stream) {\n                                _this.audioSupported = true;\n                                _this.setupAudioNodes(stream);\n                            })\n                                .catch(function () {\n                                _this.audioSupported = false;\n                                return Promise.reject('Audio is not supported');\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.audioSupported = false;\n                        return [2 /*return*/, Promise.reject('Audio is not supported')];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Setup audio nodes after successful `init`.\n     */\n    AudioRecorder.prototype.setupAudioNodes = function (stream) {\n        return __awaiter(this, void 0, void 0, function () {\n            var err_1, sourceNode, processorNode, analyserNode;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.audioContext.resume()];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        err_1 = _a.sent();\n                        logger.error(err_1);\n                        return [3 /*break*/, 3];\n                    case 3:\n                        sourceNode = this.audioContext.createMediaStreamSource(stream);\n                        processorNode = this.audioContext.createScriptProcessor(4096, 1, 1);\n                        processorNode.onaudioprocess = function (audioProcessingEvent) {\n                            if (!_this.recording)\n                                return;\n                            var stream = audioProcessingEvent.inputBuffer.getChannelData(0);\n                            _this.streamBuffer.push(new Float32Array(stream)); // set to a copy of the stream\n                            _this.streamBufferLength += stream.length;\n                            _this.analyse();\n                        };\n                        analyserNode = this.audioContext.createAnalyser();\n                        analyserNode.minDecibels = FFT_MIN_DECIBELS;\n                        analyserNode.maxDecibels = FFT_MAX_DECIBELS;\n                        analyserNode.smoothingTimeConstant = FFT_SMOOTHING_TIME_CONSTANT;\n                        sourceNode.connect(analyserNode);\n                        analyserNode.connect(processorNode);\n                        processorNode.connect(sourceNode.context.destination);\n                        this.analyserNode = analyserNode;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Start recording audio and listen for silence.\n     *\n     * @param onSilence {SilenceHandler} - called whenever silence is detected\n     * @param visualizer {Visualizer} - called with audio data on each audio process to be used for visualization.\n     */\n    AudioRecorder.prototype.startRecording = function (onSilence, visualizer) {\n        return __awaiter(this, void 0, void 0, function () {\n            var context, err_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.recording || !this.audioSupported)\n                            return [2 /*return*/];\n                        this.onSilence = onSilence || function () { };\n                        this.visualizer = visualizer || function () { };\n                        context = this.audioContext;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, context.resume()];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_2 = _a.sent();\n                        logger.error(err_2);\n                        return [3 /*break*/, 4];\n                    case 4:\n                        this.start = Date.now();\n                        this.recording = true;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Pause recording\n     */\n    AudioRecorder.prototype.stopRecording = function () {\n        if (!this.audioSupported)\n            return;\n        this.recording = false;\n    };\n    /**\n     * Pause recording and clear audio buffer\n     */\n    AudioRecorder.prototype.clear = function () {\n        this.stopRecording();\n        this.streamBufferLength = 0;\n        this.streamBuffer = [];\n    };\n    /**\n     * Plays given audioStream with audioContext\n     *\n     * @param buffer {Uint8Array} - audioStream to be played\n     */\n    AudioRecorder.prototype.play = function (buffer) {\n        var _this = this;\n        if (!buffer || !this.audioSupported)\n            return;\n        var myBlob = new Blob([buffer]);\n        return new Promise(function (res, rej) {\n            var fileReader = new FileReader();\n            fileReader.onload = function () {\n                if (_this.playbackSource)\n                    _this.playbackSource.disconnect(); // disconnect previous playback source\n                _this.playbackSource = _this.audioContext.createBufferSource();\n                var successCallback = function (buf) {\n                    _this.playbackSource.buffer = buf;\n                    _this.playbackSource.connect(_this.audioContext.destination);\n                    _this.playbackSource.onended = function () {\n                        return res();\n                    };\n                    _this.playbackSource.start(0);\n                };\n                var errorCallback = function (err) {\n                    return rej(err);\n                };\n                _this.audioContext.decodeAudioData(fileReader.result, successCallback, errorCallback);\n            };\n            fileReader.onerror = function () { return rej(); };\n            fileReader.readAsArrayBuffer(myBlob);\n        });\n    };\n    /**\n     * Stops playing audio if there's a playback source connected.\n     */\n    AudioRecorder.prototype.stop = function () {\n        if (this.playbackSource) {\n            this.playbackSource.stop();\n        }\n    };\n    /**\n     * Called after each audioProcess. Check for silence and give fft time domain data to visualizer.\n     */\n    AudioRecorder.prototype.analyse = function () {\n        if (!this.audioSupported)\n            return;\n        var analyser = this.analyserNode;\n        analyser.fftSize = FFT_SIZE;\n        var bufferLength = analyser.fftSize;\n        var dataArray = new Uint8Array(bufferLength);\n        var amplitude = this.options.amplitude;\n        var time = this.options.time;\n        analyser.getByteTimeDomainData(dataArray);\n        this.visualizer(dataArray, bufferLength);\n        for (var i = 0; i < bufferLength; i++) {\n            // Normalize between -1 and 1.\n            var curr_value_time = dataArray[i] / 128 - 1.0;\n            if (curr_value_time > amplitude || curr_value_time < -1 * amplitude) {\n                this.start = Date.now();\n            }\n        }\n        var newtime = Date.now();\n        var elapsedTime = newtime - this.start;\n        if (elapsedTime > time) {\n            this.onSilence();\n        }\n    };\n    /**\n     * Encodes recorded buffer to a wav file and exports it to a blob.\n     *\n     * @param exportSampleRate {number} - desired sample rate of the exported buffer\n     */\n    AudioRecorder.prototype.exportWAV = function (exportSampleRate) {\n        if (exportSampleRate === void 0) { exportSampleRate = DEFAULT_EXPORT_SAMPLE_RATE; }\n        return __awaiter(this, void 0, void 0, function () {\n            var recordSampleRate, blob;\n            return __generator(this, function (_a) {\n                if (!this.audioSupported)\n                    return [2 /*return*/];\n                recordSampleRate = this.audioContext.sampleRate;\n                blob = exportBuffer(this.streamBuffer, this.streamBufferLength, recordSampleRate, exportSampleRate);\n                this.clear();\n                return [2 /*return*/, blob];\n            });\n        });\n    };\n    return AudioRecorder;\n}());\nvar visualize = function (dataArray, bufferLength, canvas) {\n    if (!canvas)\n        return;\n    if (!browserOrNode().isBrowser)\n        throw new Error('Visualization is not supported on non-browsers.');\n    var _a = canvas.getBoundingClientRect(), width = _a.width, height = _a.height;\n    // need to update the default canvas width and height\n    canvas.width = width;\n    canvas.height = height;\n    var canvasCtx = canvas.getContext('2d');\n    canvasCtx.fillStyle = 'white';\n    canvasCtx.clearRect(0, 0, width, height);\n    var draw = function () {\n        canvasCtx.fillRect(0, 0, width, height);\n        canvasCtx.lineWidth = 1;\n        var color = getComputedStyle(document.documentElement).getPropertyValue('--amplify-primary-color');\n        canvasCtx.strokeStyle = !color || color === '' ? '#ff9900' : color; // TODO: try separate css variable\n        canvasCtx.beginPath();\n        var sliceWidth = (width * 1.0) / bufferLength;\n        var x = 0;\n        for (var i = 0; i < bufferLength || i % 3 === 0; i++) {\n            var value = dataArray[i] / 128.0;\n            var y = (value * height) / 2;\n            if (i === 0) {\n                canvasCtx.moveTo(x, y);\n            }\n            else {\n                canvasCtx.lineTo(x, y);\n            }\n            x += sliceWidth;\n        }\n        canvasCtx.lineTo(canvas.width, canvas.height / 2);\n        canvasCtx.stroke();\n    };\n    // Register our draw function with requestAnimationFrame.\n    requestAnimationFrame(draw);\n};\nvar amplifyChatbotCss = \".bot .dot{background-color:var(--bot-dot-color)}.user .dot{background-color:var(--user-dot-color)}.dot-flashing{width:2.625rem}.dot-flashing .dot{display:inline-block;width:0.625rem;height:0.625rem;border-radius:10rem;opacity:0.65}.dot-flashing .left{-webkit-animation:dot-flashing 1s infinite alternate;animation:dot-flashing 1s infinite alternate;-webkit-animation-delay:0s;animation-delay:0s}.dot-flashing .middle{margin-left:0.375rem;margin-right:0.375rem;-webkit-animation:dot-flashing 1s infinite linear alternate;animation:dot-flashing 1s infinite linear alternate;-webkit-animation-delay:0.5s;animation-delay:0.5s}.dot-flashing .right{-webkit-animation:dot-flashing 1s infinite alternate;animation:dot-flashing 1s infinite alternate;-webkit-animation-delay:1s;animation-delay:1s}@-webkit-keyframes dot-flashing{0%{opacity:0.65}50%,100%{opacity:0.1}}@keyframes dot-flashing{0%{opacity:0.65}50%,100%{opacity:0.1}}:host{--width:28.75rem;--height:37.5rem;--header-color:var(--amplify-secondary-color);--header-size:var(--amplify-text-lg);--bot-background-color:rgb(230, 230, 230);--bot-text-color:black;--bot-dot-color:var(--bot-text-color);--user-background-color:var(--amplify-blue);--user-text-color:var(--amplify-white);--user-dot-color:var(--user-text-color)}.amplify-chatbot{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-direction:column;flex-direction:column;background-color:var(--background-color);border-radius:0.375rem;-webkit-box-shadow:0.0625rem 0rem 0.25rem 0 rgba(0, 0, 0, 0.15);box-shadow:0.0625rem 0rem 0.25rem 0 rgba(0, 0, 0, 0.15);-webkit-box-sizing:border-box;box-sizing:border-box;font-family:var(--amplify-font-family);margin-bottom:1rem;width:100%;height:var(--height);max-width:var(--width)}@media (min-width: 672px){.amplify-chatbot{width:var(--width)}}.header{padding:1.25rem 0.375rem 1.25rem 0.375rem;color:var(--header-color);font-size:var(--header-size);font-weight:bold;text-align:center;word-wrap:break-word}.body{border-top:0.0625rem solid rgba(0, 0, 0, 0.05);padding:1.5rem 1rem 0 1rem;display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-ms-flex-direction:column;flex-direction:column;overflow:auto}.bubble{max-width:100%;padding:0.8em 1.4em;text-align:left;word-wrap:break-word;margin-bottom:0.625rem}.bot{margin-right:auto;background-color:var(--bot-background-color);color:var(--bot-text-color);border-radius:1.5rem 1.5rem 1.5rem 0}.user{margin-left:auto;background-color:var(--user-background-color);color:var(--user-text-color);border-radius:1.5rem 1.5rem 0 1.5rem}.footer{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;border-top:0.062rem solid rgba(0, 0, 0, 0.05);padding-right:0.625rem;min-height:3.125rem}.footer amplify-input{--border:none;--margin:0;-ms-flex-positive:1;flex-grow:1}canvas{margin-left:0.625rem;margin-right:0.625rem;-ms-flex-positive:1;flex-grow:1;height:3.125rem}.icon-button{--icon-height:1.25rem;--icon-fill:var(--amplify-primary-color);--padding:0.625rem;--width:auto}\";\n// enum for possible bot states\nvar ChatState;\n(function (ChatState) {\n    ChatState[ChatState[\"Initial\"] = 0] = \"Initial\";\n    ChatState[ChatState[\"Listening\"] = 1] = \"Listening\";\n    ChatState[ChatState[\"SendingText\"] = 2] = \"SendingText\";\n    ChatState[ChatState[\"SendingVoice\"] = 3] = \"SendingVoice\";\n    ChatState[ChatState[\"Error\"] = 4] = \"Error\";\n})(ChatState || (ChatState = {}));\n// Message types\nvar MessageFrom;\n(function (MessageFrom) {\n    MessageFrom[\"Bot\"] = \"bot\";\n    MessageFrom[\"User\"] = \"user\";\n})(MessageFrom || (MessageFrom = {}));\n// Error types\nvar ChatErrorType;\n(function (ChatErrorType) {\n    ChatErrorType[ChatErrorType[\"Recoverable\"] = 0] = \"Recoverable\";\n    ChatErrorType[ChatErrorType[\"Unrecoverable\"] = 1] = \"Unrecoverable\";\n})(ChatErrorType || (ChatErrorType = {}));\nvar AmplifyChatbot = /** @class */ (function () {\n    function class_1(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        /** Clear messages when conversation finishes */\n        this.clearOnComplete = false;\n        /** Continue listening to users after they send the message */\n        this.conversationModeOn = false;\n        /** Text placed in the top header */\n        this.botTitle = Translations.CHATBOT_TITLE;\n        /** Whether voice chat is enabled */\n        this.voiceEnabled = false;\n        /** Whether text chat is enabled */\n        this.textEnabled = true;\n        /** Amount of silence (in ms) to wait for */\n        this.silenceTime = 1500;\n        /** Noise threshold between -1 and 1. Anything below is considered a silence. */\n        this.silenceThreshold = 0.2;\n        /** Messages in current session */\n        this.messages = [];\n        /** Text input box value  */\n        this.text = '';\n        /** Current app state */\n        this.chatState = ChatState.Initial;\n        /**\n         * Rendering methods\n         */\n        this.messageJSX = function (messages) {\n            var messageList = messages.map(function (message) { return h(\"div\", { class: \"bubble \" + message.from }, message.content); });\n            if (_this.chatState === ChatState.SendingText || _this.chatState === ChatState.SendingVoice) {\n                // if waiting for voice message, show animation on user side because app is waiting for transcript. Else put it on bot side.\n                var client = _this.chatState === ChatState.SendingText ? MessageFrom.Bot : MessageFrom.User;\n                messageList.push(h(\"div\", { class: \"bubble \" + client }, h(\"div\", { class: \"dot-flashing \" + client }, h(\"span\", { class: \"dot left\" }), h(\"span\", { class: \"dot middle\" }), h(\"span\", { class: \"dot right\" }))));\n            }\n            return messageList;\n        };\n        this.chatCompleted = createEvent(this, \"chatCompleted\", 7);\n    }\n    // Occurs when user presses enter in input box\n    class_1.prototype.submitHandler = function (_event) {\n        this.sendTextMessage();\n    };\n    /**\n     * Lifecycle functions\n     */\n    class_1.prototype.componentWillLoad = function () {\n        if (!Interactions || typeof Interactions.onComplete !== 'function') {\n            throw new Error(NO_INTERACTIONS_MODULE_FOUND);\n        }\n        this.validateProps();\n    };\n    class_1.prototype.componentDidRender = function () {\n        // scroll to the bottom if necessary\n        var body = this.element.shadowRoot.querySelector('.body');\n        body.scrollTop = body.scrollHeight;\n    };\n    class_1.prototype.validateProps = function () {\n        var _this = this;\n        if (!this.voiceEnabled && !this.textEnabled) {\n            this.setError(Translations.CHAT_DISABLED_ERROR, ChatErrorType.Unrecoverable);\n            return;\n        }\n        else if (!this.botName) {\n            this.setError(Translations.NO_BOT_NAME_ERROR, ChatErrorType.Unrecoverable);\n            return;\n        }\n        if (this.welcomeMessage)\n            this.appendToChat(this.welcomeMessage, MessageFrom.Bot);\n        // Initialize AudioRecorder if voice is enabled\n        if (this.voiceEnabled) {\n            this.audioRecorder = new AudioRecorder({\n                time: this.silenceTime,\n                amplitude: this.silenceThreshold,\n            });\n            this.audioRecorder.init().catch(function (err) {\n                _this.setError(err, ChatErrorType.Recoverable);\n            });\n        }\n        // Callback function to be called after chat is completed\n        var onComplete = function (err, data) {\n            _this.chatCompleted.emit({\n                data: data,\n                err: err,\n            });\n            if (_this.clearOnComplete) {\n                _this.reset();\n            }\n            else {\n                _this.chatState = ChatState.Initial;\n            }\n        };\n        try {\n            Interactions.onComplete(this.botName, onComplete);\n        }\n        catch (err) {\n            this.setError(err, ChatErrorType.Unrecoverable);\n        }\n    };\n    /**\n     * Handlers\n     */\n    class_1.prototype.handleMicButton = function () {\n        var _this = this;\n        if (this.chatState !== ChatState.Initial)\n            return;\n        this.audioRecorder.stop();\n        this.chatState = ChatState.Listening;\n        this.audioRecorder.startRecording(function () { return _this.handleSilence(); }, function (data, length) { return _this.visualizer(data, length); });\n    };\n    class_1.prototype.handleSilence = function () {\n        var _this = this;\n        this.chatState = ChatState.SendingVoice;\n        this.audioRecorder.stopRecording();\n        this.audioRecorder.exportWAV().then(function (blob) {\n            _this.sendVoiceMessage(blob);\n        });\n    };\n    class_1.prototype.handleTextChange = function (event) {\n        var target = event.target;\n        this.text = target.value;\n    };\n    class_1.prototype.handleCancelButton = function () {\n        this.audioRecorder.clear();\n        this.chatState = ChatState.Initial;\n    };\n    class_1.prototype.handleToastClose = function (errorType) {\n        this.error = undefined; // clear error\n        // if error is recoverable, reset the app state to initial\n        if (errorType === ChatErrorType.Recoverable) {\n            this.chatState = ChatState.Initial;\n        }\n    };\n    /**\n     * Visualization\n     */\n    class_1.prototype.visualizer = function (dataArray, bufferLength) {\n        var canvas = this.element.shadowRoot.querySelector('canvas');\n        visualize(dataArray, bufferLength, canvas);\n    };\n    /**\n     * Interactions helpers\n     */\n    class_1.prototype.sendTextMessage = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var text, response, err_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.text.length === 0 || this.chatState !== ChatState.Initial)\n                            return [2 /*return*/];\n                        text = this.text;\n                        this.text = '';\n                        this.appendToChat(text, MessageFrom.User);\n                        this.chatState = ChatState.SendingText;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, Interactions.send(this.botName, text)];\n                    case 2:\n                        response = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_3 = _a.sent();\n                        this.setError(err_3, ChatErrorType.Recoverable);\n                        return [2 /*return*/];\n                    case 4:\n                        if (response.message) {\n                            this.appendToChat(response.message, MessageFrom.Bot);\n                        }\n                        this.chatState = ChatState.Initial;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.sendVoiceMessage = function (audioInput) {\n        return __awaiter(this, void 0, void 0, function () {\n            var interactionsMessage, response, err_4, dialogState;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        interactionsMessage = {\n                            content: audioInput,\n                            options: {\n                                messageType: 'voice',\n                            },\n                        };\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, Interactions.send(this.botName, interactionsMessage)];\n                    case 2:\n                        response = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_4 = _a.sent();\n                        this.setError(err_4, ChatErrorType.Recoverable);\n                        return [2 /*return*/];\n                    case 4:\n                        this.chatState = ChatState.Initial;\n                        dialogState = response.dialogState;\n                        if (response.inputTranscript)\n                            this.appendToChat(response.inputTranscript, MessageFrom.User);\n                        this.appendToChat(response.message, MessageFrom.Bot);\n                        return [4 /*yield*/, this.audioRecorder\n                                .play(response.audioStream)\n                                .then(function () {\n                                // if conversationMode is on, chat is incomplete, and mic button isn't pressed yet, resume listening.\n                                if (_this.conversationModeOn &&\n                                    dialogState !== 'Fulfilled' &&\n                                    dialogState !== 'Failed' &&\n                                    _this.chatState === ChatState.Initial) {\n                                    _this.handleMicButton();\n                                }\n                            })\n                                .catch(function (err) { return _this.setError(err, ChatErrorType.Recoverable); })];\n                    case 5:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.appendToChat = function (content, from) {\n        this.messages = __spreadArrays(this.messages, [\n            {\n                content: content,\n                from: from,\n            },\n        ]);\n    };\n    /**\n     * State control methods\n     */\n    class_1.prototype.setError = function (error, errorType) {\n        var message = typeof error === 'string' ? error : error.message;\n        this.chatState = ChatState.Error;\n        this.error = { message: message, errorType: errorType };\n    };\n    class_1.prototype.reset = function () {\n        this.chatState = ChatState.Initial;\n        this.text = '';\n        this.error = undefined;\n        this.messages = [];\n        if (this.welcomeMessage)\n            this.appendToChat(this.welcomeMessage, MessageFrom.Bot);\n        this.audioRecorder && this.audioRecorder.clear();\n    };\n    class_1.prototype.listeningFooterJSX = function () {\n        var _this = this;\n        var visualization = h(\"canvas\", { height: \"50\" });\n        var cancelButton = (h(\"amplify-button\", { \"data-test\": \"chatbot-cancel-button\", handleButtonClick: function () { return _this.handleCancelButton(); }, class: \"icon-button\", variant: \"icon\", icon: \"ban\" }));\n        return [visualization, cancelButton];\n    };\n    class_1.prototype.footerJSX = function () {\n        var _this = this;\n        if (this.chatState === ChatState.Listening)\n            return this.listeningFooterJSX();\n        var inputPlaceholder = this.textEnabled\n            ? Translations.TEXT_INPUT_PLACEHOLDER\n            : Translations.VOICE_INPUT_PLACEHOLDER;\n        var textInput = (h(\"amplify-input\", { placeholder: I18n.get(inputPlaceholder), description: \"text\", handleInputChange: function (evt) { return _this.handleTextChange(evt); }, value: this.text, disabled: this.chatState === ChatState.Error || !this.textEnabled }));\n        var micButton = this.voiceEnabled && (h(\"amplify-button\", { \"data-test\": \"chatbot-mic-button\", handleButtonClick: function () { return _this.handleMicButton(); }, class: \"icon-button\", variant: \"icon\", icon: \"microphone\", disabled: this.chatState === ChatState.Error || this.chatState !== ChatState.Initial }));\n        var sendButton = this.textEnabled && (h(\"amplify-button\", { \"data-test\": \"chatbot-send-button\", class: \"icon-button\", variant: \"icon\", icon: \"send\", handleButtonClick: function () { return _this.sendTextMessage(); }, disabled: this.chatState === ChatState.Error || this.chatState !== ChatState.Initial }));\n        return [textInput, micButton, sendButton];\n    };\n    class_1.prototype.errorToast = function () {\n        var _this = this;\n        if (!this.error)\n            return;\n        var _a = this.error, message = _a.message, errorType = _a.errorType;\n        return h(\"amplify-toast\", { message: I18n.get(message), handleClose: function () { return _this.handleToastClose(errorType); } });\n    };\n    class_1.prototype.render = function () {\n        return (h(Host, null, h(\"div\", { class: \"amplify-chatbot\" }, h(\"slot\", { name: \"header\" }, h(\"div\", { class: \"header\", \"data-test\": \"chatbot-header\" }, I18n.get(this.botTitle))), h(\"div\", { class: \"body\", \"data-test\": \"chatbot-body\" }, this.messageJSX(this.messages)), h(\"div\", { class: \"footer\", \"data-test\": \"chatbot-footer\" }, this.footerJSX()), this.errorToast())));\n    };\n    Object.defineProperty(class_1.prototype, \"element\", {\n        get: function () { return getElement(this); },\n        enumerable: false,\n        configurable: true\n    });\n    return class_1;\n}());\nAmplifyChatbot.style = amplifyChatbotCss;\nexport { AmplifyChatbot as amplify_chatbot };\n","/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractInteractionsProvider');\nvar AbstractInteractionsProvider = /** @class */ (function () {\n    function AbstractInteractionsProvider(options) {\n        if (options === void 0) { options = {}; }\n        this._config = options;\n    }\n    AbstractInteractionsProvider.prototype.configure = function (config) {\n        if (config === void 0) { config = {}; }\n        this._config = __assign(__assign({}, this._config), config);\n        logger.debug(\"configure \" + this.getProviderName(), this._config);\n        return this.options;\n    };\n    AbstractInteractionsProvider.prototype.getCategory = function () {\n        return 'Interactions';\n    };\n    Object.defineProperty(AbstractInteractionsProvider.prototype, \"options\", {\n        get: function () {\n            return __assign({}, this._config);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractInteractionsProvider;\n}());\nexport { AbstractInteractionsProvider };\n//# sourceMappingURL=InteractionsProvider.js.map","// Partition default templates\nvar AWS_TEMPLATE = \"runtime.lex.{region}.amazonaws.com\";\nvar AWS_CN_TEMPLATE = \"runtime.lex.{region}.amazonaws.com.cn\";\nvar AWS_ISO_TEMPLATE = \"runtime.lex.{region}.c2s.ic.gov\";\nvar AWS_ISO_B_TEMPLATE = \"runtime.lex.{region}.sc2s.sgov.gov\";\nvar AWS_US_GOV_TEMPLATE = \"runtime.lex.{region}.amazonaws.com\";\n// Partition regions\nvar AWS_REGIONS = new Set([\n    \"ap-south-1\",\n    \"eu-north-1\",\n    \"eu-west-3\",\n    \"eu-west-2\",\n    \"eu-west-1\",\n    \"ap-northeast-2\",\n    \"ap-northeast-1\",\n    \"me-south-1\",\n    \"ca-central-1\",\n    \"sa-east-1\",\n    \"ap-east-1\",\n    \"ap-southeast-1\",\n    \"ap-southeast-2\",\n    \"eu-central-1\",\n    \"us-east-1\",\n    \"us-east-2\",\n    \"us-west-1\",\n    \"us-west-2\",\n]);\nvar AWS_CN_REGIONS = new Set([\"cn-north-1\", \"cn-northwest-1\"]);\nvar AWS_ISO_REGIONS = new Set([\"us-iso-east-1\"]);\nvar AWS_ISO_B_REGIONS = new Set([\"us-isob-east-1\"]);\nvar AWS_US_GOV_REGIONS = new Set([\"us-gov-west-1\", \"us-gov-east-1\"]);\nexport var defaultRegionInfoProvider = function (region, options) {\n    var regionInfo = undefined;\n    switch (region) {\n        // First, try to match exact region names.\n        case \"eu-west-1\":\n            regionInfo = {\n                hostname: \"runtime.lex.eu-west-1.amazonaws.com\",\n                signingService: \"lex\",\n            };\n            break;\n        case \"us-east-1\":\n            regionInfo = {\n                hostname: \"runtime.lex.us-east-1.amazonaws.com\",\n                signingService: \"lex\",\n            };\n            break;\n        case \"us-west-2\":\n            regionInfo = {\n                hostname: \"runtime.lex.us-west-2.amazonaws.com\",\n                signingService: \"lex\",\n            };\n            break;\n        // Next, try to match partition endpoints.\n        default:\n            if (AWS_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n                    signingService: \"lex\",\n                };\n            }\n            if (AWS_CN_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_CN_TEMPLATE.replace(\"{region}\", region),\n                };\n            }\n            if (AWS_ISO_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_ISO_TEMPLATE.replace(\"{region}\", region),\n                };\n            }\n            if (AWS_ISO_B_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_ISO_B_TEMPLATE.replace(\"{region}\", region),\n                };\n            }\n            if (AWS_US_GOV_REGIONS.has(region)) {\n                regionInfo = {\n                    hostname: AWS_US_GOV_TEMPLATE.replace(\"{region}\", region),\n                };\n            }\n            // Finally, assume it's an AWS partition endpoint.\n            if (regionInfo === undefined) {\n                regionInfo = {\n                    hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n                    signingService: \"lex\",\n                };\n            }\n    }\n    return Promise.resolve(regionInfo);\n};\n//# sourceMappingURL=endpoints.js.map","import { defaultRegionInfoProvider } from \"./endpoints\";\nexport var ClientSharedValues = {\n    apiVersion: \"2016-11-28\",\n    disableHostPrefix: false,\n    regionInfoProvider: defaultRegionInfoProvider,\n    signingName: \"lex\",\n};\n//# sourceMappingURL=runtimeConfig.shared.js.map","import { __assign } from \"tslib\";\nimport { name, version } from \"./package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidFunction } from \"@aws-sdk/invalid-dependency\";\nimport { parseUrl } from \"@aws-sdk/url-parser-browser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { ClientSharedValues } from \"./runtimeConfig.shared\";\nexport var ClientDefaultValues = __assign(__assign({}, ClientSharedValues), { runtime: \"browser\", base64Decoder: fromBase64, base64Encoder: toBase64, bodyLengthChecker: calculateBodyLength, credentialDefaultProvider: invalidFunction(\"Credential is missing\"), defaultUserAgent: defaultUserAgent(name, version), maxAttemptsDefaultProvider: (function () { return \"3\"; }), regionDefaultProvider: invalidFunction(\"Region is missing\"), requestHandler: new FetchHttpHandler(), sha256: Sha256, streamCollector: streamCollector, urlParser: parseUrl, utf8Decoder: fromUtf8, utf8Encoder: toUtf8 });\n//# sourceMappingURL=runtimeConfig.browser.js.map","import { __assign, __extends } from \"tslib\";\nimport { ClientDefaultValues as __ClientDefaultValues } from \"./runtimeConfig\";\nimport { resolveEndpointsConfig, resolveRegionConfig, } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig, } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Amazon Lex provides both build and runtime endpoints. Each endpoint provides a set of\n *       operations (API). Your conversational bot uses the runtime API to understand user utterances\n *       (user input text or voice). For example, suppose a user says \"I want pizza\", your bot sends\n *       this input to Amazon Lex using the runtime API. Amazon Lex recognizes that the user request is\n *       for the OrderPizza intent (one of the intents defined in the bot). Then Amazon Lex engages in\n *       user conversation on behalf of the bot to elicit required information (slot values, such as\n *       pizza size and crust type), and then performs fulfillment activity (that you configured when\n *       you created the bot). You use the build-time API to create and manage your Amazon Lex bot. For\n *       a list of build-time operations, see the build-time API, . </p>\n */\nvar LexRuntimeServiceClient = /** @class */ (function (_super) {\n    __extends(LexRuntimeServiceClient, _super);\n    function LexRuntimeServiceClient(configuration) {\n        var _this = this;\n        var _config_0 = __assign(__assign({}, __ClientDefaultValues), configuration);\n        var _config_1 = resolveRegionConfig(_config_0);\n        var _config_2 = resolveEndpointsConfig(_config_1);\n        var _config_3 = resolveAwsAuthConfig(_config_2);\n        var _config_4 = resolveRetryConfig(_config_3);\n        var _config_5 = resolveUserAgentConfig(_config_4);\n        var _config_6 = resolveHostHeaderConfig(_config_5);\n        _this = _super.call(this, _config_6) || this;\n        _this.config = _config_6;\n        _this.middlewareStack.use(getAwsAuthPlugin(_this.config));\n        _this.middlewareStack.use(getRetryPlugin(_this.config));\n        _this.middlewareStack.use(getUserAgentPlugin(_this.config));\n        _this.middlewareStack.use(getContentLengthPlugin(_this.config));\n        _this.middlewareStack.use(getHostHeaderPlugin(_this.config));\n        return _this;\n    }\n    LexRuntimeServiceClient.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    return LexRuntimeServiceClient;\n}(__Client));\nexport { LexRuntimeServiceClient };\n//# sourceMappingURL=LexRuntimeServiceClient.js.map","import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { LazyJsonString as __LazyJsonString, extendedEncodeURIComponent as __extendedEncodeURIComponent, } from \"@aws-sdk/smithy-client\";\nexport var serializeAws_restJson1DeleteSessionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {\n                    \"Content-Type\": \"\",\n                };\n                resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n                if (input.botAlias !== undefined) {\n                    labelValue = input.botAlias;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: botAlias.\");\n                }\n                if (input.botName !== undefined) {\n                    labelValue = input.botName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: botName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: botName.\");\n                }\n                if (input.userId !== undefined) {\n                    labelValue = input.userId;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: userId.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: userId.\");\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"DELETE\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1GetSessionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {\n                    \"Content-Type\": \"\",\n                };\n                resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n                if (input.botAlias !== undefined) {\n                    labelValue = input.botAlias;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: botAlias.\");\n                }\n                if (input.botName !== undefined) {\n                    labelValue = input.botName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: botName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: botName.\");\n                }\n                if (input.userId !== undefined) {\n                    labelValue = input.userId;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: userId.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: userId.\");\n                }\n                query = __assign({}, (input.checkpointLabelFilter !== undefined && { checkpointLabelFilter: input.checkpointLabelFilter }));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"GET\",\n                        headers: headers,\n                        path: resolvedPath,\n                        query: query,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PostContentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign(__assign(__assign(__assign({ \"Content-Type\": \"application/octet-stream\", \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\" }, (isSerializableHeaderValue(input.accept) && { Accept: input.accept })), (isSerializableHeaderValue(input.contentType) && { \"Content-Type\": input.contentType })), (isSerializableHeaderValue(input.requestAttributes) && {\n                    \"x-amz-lex-request-attributes\": __LazyJsonString.fromObject(input.requestAttributes),\n                })), (isSerializableHeaderValue(input.sessionAttributes) && {\n                    \"x-amz-lex-session-attributes\": __LazyJsonString.fromObject(input.sessionAttributes),\n                }));\n                resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/content\";\n                if (input.botAlias !== undefined) {\n                    labelValue = input.botAlias;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: botAlias.\");\n                }\n                if (input.botName !== undefined) {\n                    labelValue = input.botName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: botName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: botName.\");\n                }\n                if (input.userId !== undefined) {\n                    labelValue = input.userId;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: userId.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: userId.\");\n                }\n                if (input.inputStream !== undefined) {\n                    body = input.inputStream;\n                }\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PostTextCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = {\n                    \"Content-Type\": \"application/json\",\n                };\n                resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/text\";\n                if (input.botAlias !== undefined) {\n                    labelValue = input.botAlias;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: botAlias.\");\n                }\n                if (input.botName !== undefined) {\n                    labelValue = input.botName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: botName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: botName.\");\n                }\n                if (input.userId !== undefined) {\n                    labelValue = input.userId;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: userId.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: userId.\");\n                }\n                body = JSON.stringify(__assign(__assign(__assign({}, (input.inputText !== undefined && { inputText: input.inputText })), (input.requestAttributes !== undefined && {\n                    requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context),\n                })), (input.sessionAttributes !== undefined && {\n                    sessionAttributes: serializeAws_restJson1StringMap(input.sessionAttributes, context),\n                })));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var serializeAws_restJson1PutSessionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                headers = __assign({ \"Content-Type\": \"application/json\" }, (isSerializableHeaderValue(input.accept) && { Accept: input.accept }));\n                resolvedPath = \"/bot/{botName}/alias/{botAlias}/user/{userId}/session\";\n                if (input.botAlias !== undefined) {\n                    labelValue = input.botAlias;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: botAlias.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{botAlias}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: botAlias.\");\n                }\n                if (input.botName !== undefined) {\n                    labelValue = input.botName;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: botName.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{botName}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: botName.\");\n                }\n                if (input.userId !== undefined) {\n                    labelValue = input.userId;\n                    if (labelValue.length <= 0) {\n                        throw new Error(\"Empty value provided for input HTTP label: userId.\");\n                    }\n                    resolvedPath = resolvedPath.replace(\"{userId}\", __extendedEncodeURIComponent(labelValue));\n                }\n                else {\n                    throw new Error(\"No value provided for input HTTP label: userId.\");\n                }\n                body = JSON.stringify(__assign(__assign(__assign({}, (input.dialogAction !== undefined && {\n                    dialogAction: serializeAws_restJson1DialogAction(input.dialogAction, context),\n                })), (input.recentIntentSummaryView !== undefined && {\n                    recentIntentSummaryView: serializeAws_restJson1IntentSummaryList(input.recentIntentSummaryView, context),\n                })), (input.sessionAttributes !== undefined && {\n                    sessionAttributes: serializeAws_restJson1StringMap(input.sessionAttributes, context),\n                })));\n                return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                return [2 /*return*/, new __HttpRequest({\n                        protocol: protocol,\n                        hostname: hostname,\n                        port: port,\n                        method: \"POST\",\n                        headers: headers,\n                        path: resolvedPath,\n                        body: body,\n                    })];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1DeleteSessionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_restJson1DeleteSessionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    __type: \"DeleteSessionResponse\",\n                    botAlias: undefined,\n                    botName: undefined,\n                    sessionId: undefined,\n                    userId: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.botAlias !== undefined && data.botAlias !== null) {\n                    contents.botAlias = data.botAlias;\n                }\n                if (data.botName !== undefined && data.botName !== null) {\n                    contents.botName = data.botName;\n                }\n                if (data.sessionId !== undefined && data.sessionId !== null) {\n                    contents.sessionId = data.sessionId;\n                }\n                if (data.userId !== undefined && data.userId !== null) {\n                    contents.userId = data.userId;\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1DeleteSessionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, parsedBody, message;\n    return __generator(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _c = errorCode;\n                switch (_c) {\n                    case \"BadRequestException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.lexruntimeservice#BadRequestException\": return [3 /*break*/, 2];\n                    case \"ConflictException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.lexruntimeservice#ConflictException\": return [3 /*break*/, 4];\n                    case \"InternalFailureException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.lexruntimeservice#InternalFailureException\": return [3 /*break*/, 6];\n                    case \"LimitExceededException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.lexruntimeservice#LimitExceededException\": return [3 /*break*/, 8];\n                    case \"NotFoundException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.lexruntimeservice#NotFoundException\": return [3 /*break*/, 10];\n                }\n                return [3 /*break*/, 12];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 10:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 12:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _j.label = 13;\n            case 13:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1GetSessionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_restJson1GetSessionCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    __type: \"GetSessionResponse\",\n                    dialogAction: undefined,\n                    recentIntentSummaryView: undefined,\n                    sessionAttributes: undefined,\n                    sessionId: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.dialogAction !== undefined && data.dialogAction !== null) {\n                    contents.dialogAction = deserializeAws_restJson1DialogAction(data.dialogAction, context);\n                }\n                if (data.recentIntentSummaryView !== undefined && data.recentIntentSummaryView !== null) {\n                    contents.recentIntentSummaryView = deserializeAws_restJson1IntentSummaryList(data.recentIntentSummaryView, context);\n                }\n                if (data.sessionAttributes !== undefined && data.sessionAttributes !== null) {\n                    contents.sessionAttributes = deserializeAws_restJson1StringMap(data.sessionAttributes, context);\n                }\n                if (data.sessionId !== undefined && data.sessionId !== null) {\n                    contents.sessionId = data.sessionId;\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1GetSessionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, parsedBody, message;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _c = errorCode;\n                switch (_c) {\n                    case \"BadRequestException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.lexruntimeservice#BadRequestException\": return [3 /*break*/, 2];\n                    case \"InternalFailureException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.lexruntimeservice#InternalFailureException\": return [3 /*break*/, 4];\n                    case \"LimitExceededException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.lexruntimeservice#LimitExceededException\": return [3 /*break*/, 6];\n                    case \"NotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.lexruntimeservice#NotFoundException\": return [3 /*break*/, 8];\n                }\n                return [3 /*break*/, 10];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PostContentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_restJson1PostContentCommandError(output, context)];\n        }\n        contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PostContentResponse\",\n            audioStream: undefined,\n            contentType: undefined,\n            dialogState: undefined,\n            inputTranscript: undefined,\n            intentName: undefined,\n            message: undefined,\n            messageFormat: undefined,\n            sentimentResponse: undefined,\n            sessionAttributes: undefined,\n            sessionId: undefined,\n            slotToElicit: undefined,\n            slots: undefined,\n        };\n        if (output.headers[\"content-type\"] !== undefined) {\n            contents.contentType = output.headers[\"content-type\"];\n        }\n        if (output.headers[\"x-amz-lex-dialog-state\"] !== undefined) {\n            contents.dialogState = output.headers[\"x-amz-lex-dialog-state\"];\n        }\n        if (output.headers[\"x-amz-lex-input-transcript\"] !== undefined) {\n            contents.inputTranscript = output.headers[\"x-amz-lex-input-transcript\"];\n        }\n        if (output.headers[\"x-amz-lex-intent-name\"] !== undefined) {\n            contents.intentName = output.headers[\"x-amz-lex-intent-name\"];\n        }\n        if (output.headers[\"x-amz-lex-message\"] !== undefined) {\n            contents.message = output.headers[\"x-amz-lex-message\"];\n        }\n        if (output.headers[\"x-amz-lex-message-format\"] !== undefined) {\n            contents.messageFormat = output.headers[\"x-amz-lex-message-format\"];\n        }\n        if (output.headers[\"x-amz-lex-sentiment\"] !== undefined) {\n            contents.sentimentResponse = output.headers[\"x-amz-lex-sentiment\"];\n        }\n        if (output.headers[\"x-amz-lex-session-attributes\"] !== undefined) {\n            contents.sessionAttributes = new __LazyJsonString(output.headers[\"x-amz-lex-session-attributes\"]);\n        }\n        if (output.headers[\"x-amz-lex-session-id\"] !== undefined) {\n            contents.sessionId = output.headers[\"x-amz-lex-session-id\"];\n        }\n        if (output.headers[\"x-amz-lex-slot-to-elicit\"] !== undefined) {\n            contents.slotToElicit = output.headers[\"x-amz-lex-slot-to-elicit\"];\n        }\n        if (output.headers[\"x-amz-lex-slots\"] !== undefined) {\n            contents.slots = new __LazyJsonString(output.headers[\"x-amz-lex-slots\"]);\n        }\n        data = output.body;\n        contents.audioStream = data;\n        return [2 /*return*/, Promise.resolve(contents)];\n    });\n}); };\nvar deserializeAws_restJson1PostContentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, parsedBody, message;\n    return __generator(this, function (_q) {\n        switch (_q.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _q.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _c = errorCode;\n                switch (_c) {\n                    case \"BadGatewayException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.lexruntimeservice#BadGatewayException\": return [3 /*break*/, 2];\n                    case \"BadRequestException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.lexruntimeservice#BadRequestException\": return [3 /*break*/, 4];\n                    case \"ConflictException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.lexruntimeservice#ConflictException\": return [3 /*break*/, 6];\n                    case \"DependencyFailedException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.lexruntimeservice#DependencyFailedException\": return [3 /*break*/, 8];\n                    case \"InternalFailureException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.lexruntimeservice#InternalFailureException\": return [3 /*break*/, 10];\n                    case \"LimitExceededException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.lexruntimeservice#LimitExceededException\": return [3 /*break*/, 12];\n                    case \"LoopDetectedException\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.lexruntimeservice#LoopDetectedException\": return [3 /*break*/, 14];\n                    case \"NotAcceptableException\": return [3 /*break*/, 16];\n                    case \"com.amazonaws.lexruntimeservice#NotAcceptableException\": return [3 /*break*/, 16];\n                    case \"NotFoundException\": return [3 /*break*/, 18];\n                    case \"com.amazonaws.lexruntimeservice#NotFoundException\": return [3 /*break*/, 18];\n                    case \"RequestTimeoutException\": return [3 /*break*/, 20];\n                    case \"com.amazonaws.lexruntimeservice#RequestTimeoutException\": return [3 /*break*/, 20];\n                    case \"UnsupportedMediaTypeException\": return [3 /*break*/, 22];\n                    case \"com.amazonaws.lexruntimeservice#UnsupportedMediaTypeException\": return [3 /*break*/, 22];\n                }\n                return [3 /*break*/, 24];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_q.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 25];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_q.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 25];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_q.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 25];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_q.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 25];\n            case 10:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_q.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 25];\n            case 12:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_q.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 25];\n            case 14:\n                _k = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1LoopDetectedExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_q.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 25];\n            case 16:\n                _l = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1NotAcceptableExceptionResponse(parsedOutput, context)];\n            case 17:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_q.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 25];\n            case 18:\n                _m = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 19:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([(_q.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 25];\n            case 20:\n                _o = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1RequestTimeoutExceptionResponse(parsedOutput, context)];\n            case 21:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _o.concat([(_q.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 25];\n            case 22:\n                _p = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse(parsedOutput, context)];\n            case 23:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _p.concat([(_q.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 25];\n            case 24:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _q.label = 25;\n            case 25:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PostTextCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_restJson1PostTextCommandError(output, context)];\n                }\n                contents = {\n                    $metadata: deserializeMetadata(output),\n                    __type: \"PostTextResponse\",\n                    dialogState: undefined,\n                    intentName: undefined,\n                    message: undefined,\n                    messageFormat: undefined,\n                    responseCard: undefined,\n                    sentimentResponse: undefined,\n                    sessionAttributes: undefined,\n                    sessionId: undefined,\n                    slotToElicit: undefined,\n                    slots: undefined,\n                };\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                if (data.dialogState !== undefined && data.dialogState !== null) {\n                    contents.dialogState = data.dialogState;\n                }\n                if (data.intentName !== undefined && data.intentName !== null) {\n                    contents.intentName = data.intentName;\n                }\n                if (data.message !== undefined && data.message !== null) {\n                    contents.message = data.message;\n                }\n                if (data.messageFormat !== undefined && data.messageFormat !== null) {\n                    contents.messageFormat = data.messageFormat;\n                }\n                if (data.responseCard !== undefined && data.responseCard !== null) {\n                    contents.responseCard = deserializeAws_restJson1ResponseCard(data.responseCard, context);\n                }\n                if (data.sentimentResponse !== undefined && data.sentimentResponse !== null) {\n                    contents.sentimentResponse = deserializeAws_restJson1SentimentResponse(data.sentimentResponse, context);\n                }\n                if (data.sessionAttributes !== undefined && data.sessionAttributes !== null) {\n                    contents.sessionAttributes = deserializeAws_restJson1StringMap(data.sessionAttributes, context);\n                }\n                if (data.sessionId !== undefined && data.sessionId !== null) {\n                    contents.sessionId = data.sessionId;\n                }\n                if (data.slotToElicit !== undefined && data.slotToElicit !== null) {\n                    contents.slotToElicit = data.slotToElicit;\n                }\n                if (data.slots !== undefined && data.slots !== null) {\n                    contents.slots = deserializeAws_restJson1StringMap(data.slots, context);\n                }\n                return [2 /*return*/, Promise.resolve(contents)];\n        }\n    });\n}); };\nvar deserializeAws_restJson1PostTextCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;\n    return __generator(this, function (_m) {\n        switch (_m.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _m.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _c = errorCode;\n                switch (_c) {\n                    case \"BadGatewayException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.lexruntimeservice#BadGatewayException\": return [3 /*break*/, 2];\n                    case \"BadRequestException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.lexruntimeservice#BadRequestException\": return [3 /*break*/, 4];\n                    case \"ConflictException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.lexruntimeservice#ConflictException\": return [3 /*break*/, 6];\n                    case \"DependencyFailedException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.lexruntimeservice#DependencyFailedException\": return [3 /*break*/, 8];\n                    case \"InternalFailureException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.lexruntimeservice#InternalFailureException\": return [3 /*break*/, 10];\n                    case \"LimitExceededException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.lexruntimeservice#LimitExceededException\": return [3 /*break*/, 12];\n                    case \"LoopDetectedException\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.lexruntimeservice#LoopDetectedException\": return [3 /*break*/, 14];\n                    case \"NotFoundException\": return [3 /*break*/, 16];\n                    case \"com.amazonaws.lexruntimeservice#NotFoundException\": return [3 /*break*/, 16];\n                }\n                return [3 /*break*/, 18];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 10:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 12:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 14:\n                _k = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1LoopDetectedExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 16:\n                _l = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 17:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 18:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _m.label = 19;\n            case 19:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_restJson1PutSessionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2 /*return*/, deserializeAws_restJson1PutSessionCommandError(output, context)];\n        }\n        contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PutSessionResponse\",\n            audioStream: undefined,\n            contentType: undefined,\n            dialogState: undefined,\n            intentName: undefined,\n            message: undefined,\n            messageFormat: undefined,\n            sessionAttributes: undefined,\n            sessionId: undefined,\n            slotToElicit: undefined,\n            slots: undefined,\n        };\n        if (output.headers[\"content-type\"] !== undefined) {\n            contents.contentType = output.headers[\"content-type\"];\n        }\n        if (output.headers[\"x-amz-lex-dialog-state\"] !== undefined) {\n            contents.dialogState = output.headers[\"x-amz-lex-dialog-state\"];\n        }\n        if (output.headers[\"x-amz-lex-intent-name\"] !== undefined) {\n            contents.intentName = output.headers[\"x-amz-lex-intent-name\"];\n        }\n        if (output.headers[\"x-amz-lex-message\"] !== undefined) {\n            contents.message = output.headers[\"x-amz-lex-message\"];\n        }\n        if (output.headers[\"x-amz-lex-message-format\"] !== undefined) {\n            contents.messageFormat = output.headers[\"x-amz-lex-message-format\"];\n        }\n        if (output.headers[\"x-amz-lex-session-attributes\"] !== undefined) {\n            contents.sessionAttributes = new __LazyJsonString(output.headers[\"x-amz-lex-session-attributes\"]);\n        }\n        if (output.headers[\"x-amz-lex-session-id\"] !== undefined) {\n            contents.sessionId = output.headers[\"x-amz-lex-session-id\"];\n        }\n        if (output.headers[\"x-amz-lex-slot-to-elicit\"] !== undefined) {\n            contents.slotToElicit = output.headers[\"x-amz-lex-slot-to-elicit\"];\n        }\n        if (output.headers[\"x-amz-lex-slots\"] !== undefined) {\n            contents.slots = new __LazyJsonString(output.headers[\"x-amz-lex-slots\"]);\n        }\n        data = output.body;\n        contents.audioStream = data;\n        return [2 /*return*/, Promise.resolve(contents)];\n    });\n}); };\nvar deserializeAws_restJson1PutSessionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;\n    return __generator(this, function (_m) {\n        switch (_m.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _m.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n                _c = errorCode;\n                switch (_c) {\n                    case \"BadGatewayException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.lexruntimeservice#BadGatewayException\": return [3 /*break*/, 2];\n                    case \"BadRequestException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.lexruntimeservice#BadRequestException\": return [3 /*break*/, 4];\n                    case \"ConflictException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.lexruntimeservice#ConflictException\": return [3 /*break*/, 6];\n                    case \"DependencyFailedException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.lexruntimeservice#DependencyFailedException\": return [3 /*break*/, 8];\n                    case \"InternalFailureException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.lexruntimeservice#InternalFailureException\": return [3 /*break*/, 10];\n                    case \"LimitExceededException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.lexruntimeservice#LimitExceededException\": return [3 /*break*/, 12];\n                    case \"NotAcceptableException\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.lexruntimeservice#NotAcceptableException\": return [3 /*break*/, 14];\n                    case \"NotFoundException\": return [3 /*break*/, 16];\n                    case \"com.amazonaws.lexruntimeservice#NotFoundException\": return [3 /*break*/, 16];\n                }\n                return [3 /*break*/, 18];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 10:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1InternalFailureExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 12:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 14:\n                _k = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1NotAcceptableExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 16:\n                _l = [{}];\n                return [4 /*yield*/, deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n            case 17:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_m.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 19];\n            case 18:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _m.label = 19;\n            case 19:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_restJson1BadGatewayExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"BadGatewayException\",\n            $fault: \"server\",\n            $metadata: deserializeMetadata(parsedOutput),\n            Message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.Message !== undefined && data.Message !== null) {\n            contents.Message = data.Message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1BadRequestExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"BadRequestException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1ConflictExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"ConflictException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1DependencyFailedExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"DependencyFailedException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            Message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.Message !== undefined && data.Message !== null) {\n            contents.Message = data.Message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1InternalFailureExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"InternalFailureException\",\n            $fault: \"server\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1LimitExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n            retryAfterSeconds: undefined,\n        };\n        if (parsedOutput.headers[\"retry-after\"] !== undefined) {\n            contents.retryAfterSeconds = parsedOutput.headers[\"retry-after\"];\n        }\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1LoopDetectedExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"LoopDetectedException\",\n            $fault: \"server\",\n            $metadata: deserializeMetadata(parsedOutput),\n            Message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.Message !== undefined && data.Message !== null) {\n            contents.Message = data.Message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1NotAcceptableExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"NotAcceptableException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1NotFoundExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"NotFoundException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1RequestTimeoutExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"RequestTimeoutException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n        contents = {\n            name: \"UnsupportedMediaTypeException\",\n            $fault: \"client\",\n            $metadata: deserializeMetadata(parsedOutput),\n            message: undefined,\n        };\n        data = parsedOutput.body;\n        if (data.message !== undefined && data.message !== null) {\n            contents.message = data.message;\n        }\n        return [2 /*return*/, contents];\n    });\n}); };\nvar serializeAws_restJson1DialogAction = function (input, context) {\n    return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.fulfillmentState !== undefined && { fulfillmentState: input.fulfillmentState })), (input.intentName !== undefined && { intentName: input.intentName })), (input.message !== undefined && { message: input.message })), (input.messageFormat !== undefined && { messageFormat: input.messageFormat })), (input.slotToElicit !== undefined && { slotToElicit: input.slotToElicit })), (input.slots !== undefined && { slots: serializeAws_restJson1StringMap(input.slots, context) })), (input.type !== undefined && { type: input.type }));\n};\nvar serializeAws_restJson1IntentSummary = function (input, context) {\n    return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, (input.checkpointLabel !== undefined && { checkpointLabel: input.checkpointLabel })), (input.confirmationStatus !== undefined && { confirmationStatus: input.confirmationStatus })), (input.dialogActionType !== undefined && { dialogActionType: input.dialogActionType })), (input.fulfillmentState !== undefined && { fulfillmentState: input.fulfillmentState })), (input.intentName !== undefined && { intentName: input.intentName })), (input.slotToElicit !== undefined && { slotToElicit: input.slotToElicit })), (input.slots !== undefined && { slots: serializeAws_restJson1StringMap(input.slots, context) }));\n};\nvar serializeAws_restJson1IntentSummaryList = function (input, context) {\n    return input.map(function (entry) { return serializeAws_restJson1IntentSummary(entry, context); });\n};\nvar serializeAws_restJson1StringMap = function (input, context) {\n    return Object.entries(input).reduce(function (acc, _a) {\n        var _b;\n        var _c = __read(_a, 2), key = _c[0], value = _c[1];\n        return (__assign(__assign({}, acc), (_b = {}, _b[key] = value, _b)));\n    }, {});\n};\nvar deserializeAws_restJson1Button = function (output, context) {\n    return {\n        __type: \"Button\",\n        text: output.text !== undefined && output.text !== null ? output.text : undefined,\n        value: output.value !== undefined && output.value !== null ? output.value : undefined,\n    };\n};\nvar deserializeAws_restJson1DialogAction = function (output, context) {\n    return {\n        __type: \"DialogAction\",\n        fulfillmentState: output.fulfillmentState !== undefined && output.fulfillmentState !== null ? output.fulfillmentState : undefined,\n        intentName: output.intentName !== undefined && output.intentName !== null ? output.intentName : undefined,\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n        messageFormat: output.messageFormat !== undefined && output.messageFormat !== null ? output.messageFormat : undefined,\n        slotToElicit: output.slotToElicit !== undefined && output.slotToElicit !== null ? output.slotToElicit : undefined,\n        slots: output.slots !== undefined && output.slots !== null\n            ? deserializeAws_restJson1StringMap(output.slots, context)\n            : undefined,\n        type: output.type !== undefined && output.type !== null ? output.type : undefined,\n    };\n};\nvar deserializeAws_restJson1GenericAttachment = function (output, context) {\n    return {\n        __type: \"GenericAttachment\",\n        attachmentLinkUrl: output.attachmentLinkUrl !== undefined && output.attachmentLinkUrl !== null\n            ? output.attachmentLinkUrl\n            : undefined,\n        buttons: output.buttons !== undefined && output.buttons !== null\n            ? deserializeAws_restJson1listOfButtons(output.buttons, context)\n            : undefined,\n        imageUrl: output.imageUrl !== undefined && output.imageUrl !== null ? output.imageUrl : undefined,\n        subTitle: output.subTitle !== undefined && output.subTitle !== null ? output.subTitle : undefined,\n        title: output.title !== undefined && output.title !== null ? output.title : undefined,\n    };\n};\nvar deserializeAws_restJson1genericAttachmentList = function (output, context) {\n    return (output || []).map(function (entry) { return deserializeAws_restJson1GenericAttachment(entry, context); });\n};\nvar deserializeAws_restJson1IntentSummary = function (output, context) {\n    return {\n        __type: \"IntentSummary\",\n        checkpointLabel: output.checkpointLabel !== undefined && output.checkpointLabel !== null ? output.checkpointLabel : undefined,\n        confirmationStatus: output.confirmationStatus !== undefined && output.confirmationStatus !== null\n            ? output.confirmationStatus\n            : undefined,\n        dialogActionType: output.dialogActionType !== undefined && output.dialogActionType !== null ? output.dialogActionType : undefined,\n        fulfillmentState: output.fulfillmentState !== undefined && output.fulfillmentState !== null ? output.fulfillmentState : undefined,\n        intentName: output.intentName !== undefined && output.intentName !== null ? output.intentName : undefined,\n        slotToElicit: output.slotToElicit !== undefined && output.slotToElicit !== null ? output.slotToElicit : undefined,\n        slots: output.slots !== undefined && output.slots !== null\n            ? deserializeAws_restJson1StringMap(output.slots, context)\n            : undefined,\n    };\n};\nvar deserializeAws_restJson1IntentSummaryList = function (output, context) {\n    return (output || []).map(function (entry) { return deserializeAws_restJson1IntentSummary(entry, context); });\n};\nvar deserializeAws_restJson1listOfButtons = function (output, context) {\n    return (output || []).map(function (entry) { return deserializeAws_restJson1Button(entry, context); });\n};\nvar deserializeAws_restJson1ResponseCard = function (output, context) {\n    return {\n        __type: \"ResponseCard\",\n        contentType: output.contentType !== undefined && output.contentType !== null ? output.contentType : undefined,\n        genericAttachments: output.genericAttachments !== undefined && output.genericAttachments !== null\n            ? deserializeAws_restJson1genericAttachmentList(output.genericAttachments, context)\n            : undefined,\n        version: output.version !== undefined && output.version !== null ? output.version : undefined,\n    };\n};\nvar deserializeAws_restJson1SentimentResponse = function (output, context) {\n    return {\n        __type: \"SentimentResponse\",\n        sentimentLabel: output.sentimentLabel !== undefined && output.sentimentLabel !== null ? output.sentimentLabel : undefined,\n        sentimentScore: output.sentimentScore !== undefined && output.sentimentScore !== null ? output.sentimentScore : undefined,\n    };\n};\nvar deserializeAws_restJson1StringMap = function (output, context) {\n    return Object.entries(output).reduce(function (acc, _a) {\n        var _b;\n        var _c = __read(_a, 2), key = _c[0], value = _c[1];\n        return (__assign(__assign({}, acc), (_b = {}, _b[key] = value, _b)));\n    }, {});\n};\nvar deserializeMetadata = function (output) { return ({\n    httpStatusCode: output.statusCode,\n    httpHeaders: output.headers,\n    requestId: output.headers[\"x-amzn-requestid\"],\n}); };\n// Collect low-level response body stream to Uint8Array.\nvar collectBody = function (streamBody, context) {\n    if (streamBody === void 0) { streamBody = new Uint8Array(); }\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nvar collectBodyString = function (streamBody, context) {\n    return collectBody(streamBody, context).then(function (body) { return context.utf8Encoder(body); });\n};\nvar isSerializableHeaderValue = function (value) {\n    return value !== undefined &&\n        value !== \"\" &&\n        (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n        (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\nvar parseBody = function (streamBody, context) {\n    return collectBodyString(streamBody, context).then(function (encoded) {\n        if (encoded.length) {\n            return JSON.parse(encoded);\n        }\n        return {};\n    });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nvar loadRestJsonErrorCode = function (output, data) {\n    var findKey = function (object, key) { return Object.keys(object).find(function (k) { return k.toLowerCase() === key.toLowerCase(); }); };\n    var sanitizeErrorCode = function (rawValue) {\n        var cleanValue = rawValue;\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n    return \"\";\n};\n//# sourceMappingURL=Aws_restJson1.js.map","import { __extends } from \"tslib\";\nimport { deserializeAws_restJson1PostTextCommand, serializeAws_restJson1PostTextCommand, } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nvar PostTextCommand = /** @class */ (function (_super) {\n    __extends(PostTextCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function PostTextCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    PostTextCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        var stack = clientStack.concat(this.middlewareStack);\n        var handlerExecutionContext = {\n            logger: {},\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    PostTextCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restJson1PostTextCommand(input, context);\n    };\n    PostTextCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restJson1PostTextCommand(output, context);\n    };\n    return PostTextCommand;\n}($Command));\nexport { PostTextCommand };\n//# sourceMappingURL=PostTextCommand.js.map","import { __extends } from \"tslib\";\nimport { deserializeAws_restJson1PostContentCommand, serializeAws_restJson1PostContentCommand, } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nvar PostContentCommand = /** @class */ (function (_super) {\n    __extends(PostContentCommand, _super);\n    // Start section: command_properties\n    // End section: command_properties\n    function PostContentCommand(input) {\n        var _this = \n        // Start section: command_constructor\n        _super.call(this) || this;\n        _this.input = input;\n        return _this;\n        // End section: command_constructor\n    }\n    PostContentCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        var stack = clientStack.concat(this.middlewareStack);\n        var handlerExecutionContext = {\n            logger: {},\n        };\n        var requestHandler = configuration.requestHandler;\n        return stack.resolve(function (request) {\n            return requestHandler.handle(request.request, options || {});\n        }, handlerExecutionContext);\n    };\n    PostContentCommand.prototype.serialize = function (input, context) {\n        return serializeAws_restJson1PostContentCommand(input, context);\n    };\n    PostContentCommand.prototype.deserialize = function (output, context) {\n        return deserializeAws_restJson1PostContentCommand(output, context);\n    };\n    return PostContentCommand;\n}($Command));\nexport { PostContentCommand };\n//# sourceMappingURL=PostContentCommand.js.map","export var convert = function (stream) {\n    if (stream instanceof Blob || stream instanceof ReadableStream) {\n        return new Response(stream)\n            .arrayBuffer()\n            .then(function (buffer) { return new Uint8Array(buffer); });\n    }\n    else {\n        throw new Error('Readable is not supported.');\n    }\n};\n//# sourceMappingURL=convert.js.map","/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { AbstractInteractionsProvider } from './InteractionsProvider';\nimport { LexRuntimeServiceClient, PostTextCommand, PostContentCommand, } from '@aws-sdk/client-lex-runtime-service';\nimport { ConsoleLogger as Logger, Credentials, getAmplifyUserAgent, } from '@aws-amplify/core';\nimport { convert } from './AWSLexProviderHelper/convert';\nvar logger = new Logger('AWSLexProvider');\nvar AWSLexProvider = /** @class */ (function (_super) {\n    __extends(AWSLexProvider, _super);\n    function AWSLexProvider(options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, options) || this;\n        _this._botsCompleteCallback = {};\n        return _this;\n    }\n    AWSLexProvider.prototype.getProviderName = function () {\n        return 'AWSLexProvider';\n    };\n    AWSLexProvider.prototype.reportBotStatus = function (data, botname) {\n        var _this = this;\n        // Check if state is fulfilled to resolve onFullfilment promise\n        logger.debug('postContent state', data.dialogState);\n        if (data.dialogState === 'ReadyForFulfillment' ||\n            data.dialogState === 'Fulfilled') {\n            if (typeof this._botsCompleteCallback[botname] === 'function') {\n                setTimeout(function () {\n                    return _this._botsCompleteCallback[botname](null, { slots: data.slots });\n                }, 0);\n            }\n            if (this._config &&\n                typeof this._config[botname].onComplete === 'function') {\n                setTimeout(function () { return _this._config[botname].onComplete(null, { slots: data.slots }); }, 0);\n            }\n        }\n        if (data.dialogState === 'Failed') {\n            if (typeof this._botsCompleteCallback[botname] === 'function') {\n                setTimeout(function () { return _this._botsCompleteCallback[botname]('Bot conversation failed'); }, 0);\n            }\n            if (this._config &&\n                typeof this._config[botname].onComplete === 'function') {\n                setTimeout(function () { return _this._config[botname].onComplete('Bot conversation failed'); }, 0);\n            }\n        }\n    };\n    AWSLexProvider.prototype.sendMessage = function (botname, message) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentials, params, postTextCommand, data, err_1, content, messageType, postContentCommand, data, audioArray, err_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this._config[botname]) {\n                            return [2 /*return*/, Promise.reject('Bot ' + botname + ' does not exist')];\n                        }\n                        return [4 /*yield*/, Credentials.get()];\n                    case 1:\n                        credentials = _a.sent();\n                        if (!credentials) {\n                            return [2 /*return*/, Promise.reject('No credentials')];\n                        }\n                        this.lexRuntimeServiceClient = new LexRuntimeServiceClient({\n                            region: this._config[botname].region,\n                            credentials: credentials,\n                            customUserAgent: getAmplifyUserAgent(),\n                        });\n                        if (!(typeof message === 'string')) return [3 /*break*/, 6];\n                        params = {\n                            botAlias: this._config[botname].alias,\n                            botName: botname,\n                            inputText: message,\n                            userId: credentials.identityId,\n                        };\n                        logger.debug('postText to lex', message);\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        postTextCommand = new PostTextCommand(params);\n                        return [4 /*yield*/, this.lexRuntimeServiceClient.send(postTextCommand)];\n                    case 3:\n                        data = _a.sent();\n                        this.reportBotStatus(data, botname);\n                        return [2 /*return*/, data];\n                    case 4:\n                        err_1 = _a.sent();\n                        return [2 /*return*/, Promise.reject(err_1)];\n                    case 5: return [3 /*break*/, 11];\n                    case 6:\n                        content = message.content, messageType = message.options.messageType;\n                        if (messageType === 'voice') {\n                            params = {\n                                botAlias: this._config[botname].alias,\n                                botName: botname,\n                                contentType: 'audio/x-l16; sample-rate=16000',\n                                inputStream: content,\n                                userId: credentials.identityId,\n                                accept: 'audio/mpeg',\n                            };\n                        }\n                        else {\n                            params = {\n                                botAlias: this._config[botname].alias,\n                                botName: botname,\n                                contentType: 'text/plain; charset=utf-8',\n                                inputStream: content,\n                                userId: credentials.identityId,\n                                accept: 'audio/mpeg',\n                            };\n                        }\n                        logger.debug('postContent to lex', message);\n                        _a.label = 7;\n                    case 7:\n                        _a.trys.push([7, 10, , 11]);\n                        postContentCommand = new PostContentCommand(params);\n                        return [4 /*yield*/, this.lexRuntimeServiceClient.send(postContentCommand)];\n                    case 8:\n                        data = _a.sent();\n                        return [4 /*yield*/, convert(data.audioStream)];\n                    case 9:\n                        audioArray = _a.sent();\n                        this.reportBotStatus(data, botname);\n                        return [2 /*return*/, __assign(__assign({}, data), { audioStream: audioArray })];\n                    case 10:\n                        err_2 = _a.sent();\n                        return [2 /*return*/, Promise.reject(err_2)];\n                    case 11: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AWSLexProvider.prototype.onComplete = function (botname, callback) {\n        if (!this._config[botname]) {\n            throw new ErrorEvent('Bot ' + botname + ' does not exist');\n        }\n        this._botsCompleteCallback[botname] = callback;\n    };\n    return AWSLexProvider;\n}(AbstractInteractionsProvider));\nexport { AWSLexProvider };\n//# sourceMappingURL=AWSLexProvider.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Amplify, ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { AWSLexProvider } from './Providers';\nvar logger = new Logger('Interactions');\nvar InteractionsClass = /** @class */ (function () {\n    /**\n     * Initialize PubSub with AWS configurations\n     *\n     * @param {InteractionsOptions} options - Configuration object for Interactions\n     */\n    function InteractionsClass(options) {\n        this._options = options;\n        logger.debug('Interactions Options', this._options);\n        this._pluggables = {};\n    }\n    InteractionsClass.prototype.getModuleName = function () {\n        return 'Interactions';\n    };\n    /**\n     *\n     * @param {InteractionsOptions} options - Configuration object for Interactions\n     * @return {Object} - The current configuration\n     */\n    InteractionsClass.prototype.configure = function (options) {\n        var _this = this;\n        var opt = options ? options.Interactions || options : {};\n        logger.debug('configure Interactions', { opt: opt });\n        this._options = __assign(__assign({ bots: {} }, opt), opt.Interactions);\n        var aws_bots_config = this._options.aws_bots_config;\n        var bots_config = this._options.bots;\n        if (!Object.keys(bots_config).length && aws_bots_config) {\n            // Convert aws_bots_config to bots object\n            if (Array.isArray(aws_bots_config)) {\n                aws_bots_config.forEach(function (bot) {\n                    _this._options.bots[bot.name] = bot;\n                });\n            }\n        }\n        // Check if AWSLex provider is already on pluggables\n        if (!this._pluggables.AWSLexProvider &&\n            bots_config &&\n            Object.keys(bots_config)\n                .map(function (key) { return bots_config[key]; })\n                .find(function (bot) { return !bot.providerName || bot.providerName === 'AWSLexProvider'; })) {\n            this._pluggables.AWSLexProvider = new AWSLexProvider();\n        }\n        Object.keys(this._pluggables).map(function (key) {\n            _this._pluggables[key].configure(_this._options.bots);\n        });\n        return this._options;\n    };\n    InteractionsClass.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategory() === 'Interactions') {\n            if (!this._pluggables[pluggable.getProviderName()]) {\n                pluggable.configure(this._options.bots);\n                this._pluggables[pluggable.getProviderName()] = pluggable;\n                return;\n            }\n            else {\n                throw new Error('Bot ' + pluggable.getProviderName() + ' already plugged');\n            }\n        }\n    };\n    InteractionsClass.prototype.send = function (botname, message) {\n        return __awaiter(this, void 0, void 0, function () {\n            var botProvider;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this._options.bots || !this._options.bots[botname]) {\n                            throw new Error('Bot ' + botname + ' does not exist');\n                        }\n                        botProvider = this._options.bots[botname].providerName || 'AWSLexProvider';\n                        if (!this._pluggables[botProvider]) {\n                            throw new Error('Bot ' +\n                                botProvider +\n                                ' does not have valid pluggin did you try addPluggable first?');\n                        }\n                        return [4 /*yield*/, this._pluggables[botProvider].sendMessage(botname, message)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    InteractionsClass.prototype.onComplete = function (botname, callback) {\n        if (!this._options.bots || !this._options.bots[botname]) {\n            throw new Error('Bot ' + botname + ' does not exist');\n        }\n        var botProvider = this._options.bots[botname].providerName || 'AWSLexProvider';\n        if (!this._pluggables[botProvider]) {\n            throw new Error('Bot ' +\n                botProvider +\n                ' does not have valid pluggin did you try addPluggable first?');\n        }\n        this._pluggables[botProvider].onComplete(botname, callback);\n    };\n    return InteractionsClass;\n}());\nexport { InteractionsClass };\nexport var Interactions = new InteractionsClass(null);\nAmplify.register(Interactions);\n//# sourceMappingURL=Interactions.js.map"],"sourceRoot":""}